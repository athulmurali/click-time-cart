{"version":3,"sources":["registerServiceWorker.js","config/ConfigConstants.js","utilFunctions.js","Inventory.js","redux/reducers/ItemsListReducer.jsx","redux/constants/ItemsList.jsx","components/ItemBar.jsx","components/TotalBar.jsx","components/ItemsListCaptionBar.jsx","components/BulkDiscountBar.jsx","components/AfterBulkDiscount.jsx","components/ItemBarList.jsx","containers/Screens/ReviewScreen.jsx","RouteConstants.js","components/ItemCard.jsx","components/ItemCardDeck.jsx","containers/Screens/OrderCatalogueScreen.jsx","containers/Screens/ConfirmOrder.jsx","components/Navbar.jsx","containers/Screens/Offers.jsx","containers/RoutedApp.js","redux/reducers/InventoryReducer.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","offersArray","StockedItemList","id","title","price","currency","type","quantity","details","coverImgUrl","discount","getTotalItems","itemsArray","map","item","reduce","acc","curr","getDiscountedItemListCost","temp","currentItem","Number","parseFloat","toFixed","getItemListCost","getDiscountForItemList","getDiscListByType","itemList","filter","getAllBLU_RAY","getAllDVD","getBulkDiscount","totalCost","maxUniqueBLURayCount","length","maxUniqueDVDCount","initialState","ItemListArray","fetching","updateDiscountOnQtyChange","currentDVDList","currentBLURAYList","currentDVDIdSet","Set","currentBluRayIdSet","countCurrentDVDIdSet","size","countCurrentBluRayIdSet","incDecQty","array_index","changeInQty","Object","toConsumableArray","ItemsListReducer","newQty","arguments","undefined","action","objectSpread","payload","incOrDec","parseInt","newItemListArray","indexToDelete","deletedList","index","deleteItem","itemIndex","ind","getIndexOfItem","updatedArray","currentList","push","arr","newItem","findIndex","connect","dispatch","updateItemQty","itemIndexInArray","incOrDecQty","qtyToChange","props","react_default","a","createElement","className","disabled","onClick","value","style","width","justifyContent","onChange","e","val","target","isNaN","TotalBar","itemsCount","itemListTotalCost","itemListDiscount","totalPrice","BulkDiscountBar","bulkDiscountAmount","AfterBulkDiscount","totalDiscounts","amountAfterBulkDiscount","itemListTotalDiscount","bulkDiscounts","totalPriceAfterItemListDiscount","components_ItemsListCaptionBar","Item","components_ItemBar","components_TotalBar","components_BulkDiscountBar","components_AfterBulkDiscount","EmptyCart","resetCart","countItemsInCart","ReviewScreen_EmptyCart","Link","to","components_ItemBarList","addItemToCart","class","minWidth","src","alt","maxHeight","InventoryReducer","components_ItemCard","getFinalPrice","components_ItemCardDeck","ConfirmOrder","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Offers","discountDetail","RoutedApp","HashRouter","basename","components_Navbar","Switch","Route","exact","path","component","OrderCatalogueScreen","ReviewScreen","combinedReducers","combineReducers","middleware","applyMiddleware","promise","thunk","logger","store","createStore","process","ReactDOM","render","es","containers_RoutedApp","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"8LAUMA,SAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,4DAsCR,SAASC,EAAgBC,GACrBC,UAAUC,cACLC,SAASH,GACTI,KAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBG,QACbT,UAAUC,cAAcS,WAKxBC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAM/BC,MAAM,SAAAC,GACHH,QAAQG,MAAM,4CAA6CA,qFCrE1DC,EAAc,CACvB,uEAGA,0EAGA,8GAOSC,EAAkB,CAC3B,CACIC,GAAI,EACJC,MAAO,uBACPC,MAAO,GACPC,SAAU,MACVC,KA5BgB,MA6BhBC,SAAU,EACVC,QAAS,8GAETC,YAAa,4EACbC,SAAU,GAGd,CACIR,GAAI,EACJC,MAAO,uBACPC,MAAO,GACPC,SAAU,MACVC,KA1CoB,UA2CpBC,SAAU,EACVC,QAAS,8GAETC,YAAa,4EACbC,SAAU,GAId,CACIR,GAAI,EACJC,MAAO,sBACPC,MAAO,GACPC,SAAU,MACVC,KAvDgB,MAwDhBC,SAAU,EACVC,QAAS,gIAETC,YAAa,2EACbC,SAAU,GAGd,CACIR,GAAI,EACJC,MAAO,sBACPC,MAAO,GACPC,SAAU,MACVC,KArEoB,UAsEpBC,SAAU,EACVC,QAAS,gIAETC,YAAa,2EACbC,SAAU,GAId,CACIR,GAAI,EACJC,MAAO,uBACPC,MAAO,GACPC,SAAU,MACVC,KAlFgB,MAmFhBC,SAAU,EACVC,QAAS,qIAETC,YAAa,gFACbC,SAAU,GAEd,CACIR,GAAI,EACJC,MAAO,uBACPC,MAAO,GACPC,SAAU,MACVC,KA/FoB,UAgGpBC,SAAU,EACVC,QAAS,qIAETC,YAAa,gFACbC,SAAU,IClGLC,EAAgB,SAACC,GAE1B,OADiBA,EAAWC,IAAI,SAAAC,GAAI,OAAIA,EAAKP,WAC7BQ,OAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAO,IAe3CC,EAA4B,SAACN,GACtC,IAAMO,EAAOP,EAAWG,OAAQ,SAACC,EAAKI,GAAN,OAAsBJ,GAZnBF,EAYgDM,EAX5EC,OAAOC,YAAYR,EAAKP,UAAYO,EAAKV,OAAS,EAAIU,EAAKJ,YAAYa,QDNvD,KCKW,IAACT,GAY+D,GAClG,OAAOO,OAAOC,WAAWH,GAAMI,QDlBR,ICsBdC,EAAkB,SAACZ,GAC5B,IAAMO,EAAOP,EAAWG,OAAQ,SAACC,EAAKI,GAAN,OAAsBJ,EAAOI,EAAYhB,MAAQgB,EAAYb,UAAY,GACzG,OAAOc,OAAOC,WAAWH,GAAMI,QDxBR,IC6BdE,EAAyB,SAACb,GACnC,IAAMO,EAAOP,EAAWG,OAAQ,SAACC,EAAKI,GAAN,OAAsBJ,GApBfF,EAoBgDM,EAnBhFC,OAAOC,YAAYR,EAAKP,UAAYO,EAAKV,MAAQU,EAAKJ,WAAWa,QDXjD,KCUe,IAACT,GAoB+D,GACtG,OAAOO,OAAOC,WAAWH,GAAMI,QD/BR,IEAdG,EAAoB,SAACC,EAASrB,GACvC,OAAOL,EAAgB2B,OAAO,SAAAd,GAAI,OAAIA,EAAKR,OAASA,KAK3CuB,EAAgB,WACzB,OAAOH,KAEEI,EAAY,WACrB,OAAOJ,KAKEK,EAAkB,SAACJ,GAE5B,IAAMK,EAAYd,EAA0BS,GAG5C,OAFkBhB,EAAcgB,IFfG,IACV,IEiBdK,EAEJ,GAIEC,EAAuBJ,IAAgBK,OACvCC,EAAoBL,IAAYI,OCzBvCE,EAAe,CACjBC,cAAe,GACfC,UAAU,EACVvC,OAAO,GAILwC,EAA4B,SAACZ,GAE/B,IAAMa,EAAiBb,EAASC,OAAO,SAAAd,GAAI,MHdvB,QGc2BA,EAAKR,MAAsBQ,EAAKP,SAAW,IACpFkC,EAAoBd,EAASC,OAAO,SAAAd,GAAI,MHhBtB,YGgB0BA,EAAKR,MAAyBQ,EAAKP,SAAW,IAGhGX,QAAQC,IAAI,oBAAqB2C,GACjC5C,QAAQC,IAAI,oBAAqB4C,GAGjC,IAAMC,EAAkB,IAAIC,IAAIH,EAAe3B,IAAI,SAAAC,GAAI,OAAIA,EAAKZ,MAC1D0C,EAAqB,IAAID,IAAIF,EAAkB5B,IAAI,SAAAC,GAAI,OAAIA,EAAKZ,MAEtEN,QAAQC,IAAI,sBACZD,QAAQC,IAAI6C,GAEZ9C,QAAQC,IAAI,sBACZD,QAAQC,IAAI+C,GAGZ,IAAMC,EAA4BH,EAAgBI,KAC5CC,EAA4BH,EAAmBE,KAuCrD,OApCAlD,QAAQC,IAAI,2BACZD,QAAQC,IAAIgD,GAEZjD,QAAQC,IAAI,8BACZD,QAAQC,IAAIkD,GAEZpB,EAAWA,EAASd,IAAI,SAAAC,GA2BpB,MHtEoB,YG4ChBA,EAAKR,OAIDQ,EAAKJ,SAFLqC,IAA4Bd,EHzCR,IGgDJ,GHpDR,QGyDZnB,EAAKR,OACDuC,IAAyBV,GACzBvC,QAAQC,IAAI,6BAEZiB,EAAKJ,SH1DW,IG8DhBI,EAAKJ,SAAW,GAIjBI,KAKTkC,EAAY,SAACrB,EAAUsB,EAAaC,GAGtC,OAFAvB,EAASsB,GAAa1C,UAAY2C,EAClCX,EAA0BZ,GACnBwB,OAAAC,EAAA,EAAAD,CAAIxB,IAuEA0B,EA1DU,WAAkC,IAXpC1B,EAAUsB,EAAaK,EAWpB5D,EAAiC6D,UAAArB,OAAA,QAAAsB,IAAAD,UAAA,GAAAA,UAAA,GAAzBnB,EAAcqB,EAAWF,UAAArB,OAAA,EAAAqB,UAAA,QAAAC,EAEvD,OAAQC,EAAOnD,MAEX,IChGyB,cDiGrB,OAAO6C,OAAAO,EAAA,EAAAP,CAAA,GACAzD,EADP,CAEI2C,cAAeW,EAAUtD,EAAM2C,cAAeoB,EAAOE,QAAQV,YACzDQ,EAAOE,QAAQC,YAG3B,ICtGsB,cDuGlB,OAAOT,OAAAO,EAAA,EAAAP,CAAA,GACAzD,EADP,CACcK,OAAO,EACjBsC,eAzBOV,EAyBsBjC,EAAM2C,cAzBlBY,EA0BbQ,EAAOE,QAAQV,YA1BWK,EA0BEG,EAAOE,QAAQL,OAzB3D3B,EAASsB,GAAa1C,SAAWsD,SAASP,GAC1C3B,EAAWY,EAA0BZ,GAC9BwB,OAAAC,EAAA,EAAAD,CAAIxB,MA2BP,IC5G4B,uBD6GxB,IAAMmC,EAAgBX,OAAAC,EAAA,EAAAD,CAzBf,SAACxB,EAAUoC,GAE1B,IAAIC,EAAerC,EAASC,OAAO,SAACd,EAAMmD,GAAP,OAAiBA,IAAUF,IAC9D,OAAOxB,EAA0ByB,GAsBKE,CAAWxE,EAAM2C,cAAeoB,EAAOE,QAAQQ,YAC7E,OAAOhB,OAAAO,EAAA,EAAAP,CAAA,GAAIzD,EAAX,CAAkB2C,cAAeyB,IAIrC,ICjHwB,mBDkHpB,IAAMM,EAAMC,EAAe3E,EAAM2C,cAAeoB,EAAOE,QAAQ7C,MAC/D,GAAIsD,GAAO,EAAG,CAEV,IAAME,EAAetB,EAAUtD,EAAM2C,cAAe+B,EAAK,GAEzD,OAAOjB,OAAAO,EAAA,EAAAP,CAAA,GAAIzD,EAAX,CAAkB2C,cAAeiC,IAKnBb,EAAOE,QAAQ7C,KACrBP,SAAW,EACnB,IAAIgE,EAAc7E,EAAM2C,cAIxB,OAHAkC,EAAYC,KAAKf,EAAOE,QAAQ7C,MAChCyD,EAAchC,EAA0BgC,GAEjCpB,OAAAO,EAAA,EAAAP,CAAA,GAAIzD,EAAX,CAAkB2C,cAAcc,OAAAC,EAAA,EAAAD,CAAKoB,KAM7C,ICvIoB,aDwIhB,OAAOpB,OAAAO,EAAA,EAAAP,CAAA,GAAIzD,EAAX,CAAkB2C,cAAgB,KAEtC,QACI,OAAOc,OAAAO,EAAA,EAAAP,CAAA,GAAIf,KAQViC,EAAiB,SAACI,EAAKC,GAChC,OAAOD,EAAIE,UAAU,SAAAvD,GAAW,OAAIsD,EAAQxE,KAAOkB,EAAYlB,qCEhCpD0E,cA5CS,WAEpB,OAAO,MAIgB,SAACC,GAAD,MAAe,CAGtCC,cAAe,SAACC,EAAkBzB,GAC9BuB,EAAS,CACLvE,KDvFkB,cCwFlBqD,QAAS,CACLV,YAAa8B,EACbzB,OAAQA,MAMpB0B,YAAa,SAACD,EAAkBE,GAC5BJ,EAAS,CACLvE,KDnGqB,cCoGrBqD,QAAS,CACLV,YAAa8B,EACbnB,SAAUqB,MAMtBf,WAAY,SAACa,GACTF,EAAS,CACLvE,KD3GwB,uBC4GxBqD,QAAS,CACLQ,UAAWY,QASZH,CArHC,SAACM,GAEb,OADAtF,QAAQC,IAAIqF,GACLC,EAAAC,EAAAC,cAAA,MAAKC,UAAU,mBAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVJ,EAAM/E,OAGXgF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACVJ,EAAM5E,MAGX6E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV,IAAMJ,EAAM9E,OAEjB+E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mDACVC,SAAUL,EAAM3E,UAAY,EAC5BiF,QAAS,WACLN,EAAMF,YAAYE,EAAMjB,OAAQ,KAH5C,KAMAkB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAEVG,MAAOP,EAAM3E,SACbmF,MAAO,CAACC,MAAO,GAAIC,eAAgB,UACnCC,SAAU,SAACC,GACP,IAAMC,EAAMlC,SAASiC,EAAEE,OAAOP,OAC1BQ,MAAMF,GACNb,EAAMJ,cAAcI,EAAMjB,MAAO,GAKjCiB,EAAMJ,cAAcI,EAAMjB,MAAO8B,MAOhDZ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCACVE,QAAS,WACLN,EAAMF,YAAYE,EAAMjB,MAAO,KAF3C,MAMJkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACV,IAAMJ,EAAM9E,MAAQ8E,EAAM3E,UAE/B4E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACV,MAAQJ,EAAMxE,SAAWwE,EAAM9E,MAAQ8E,EAAM3E,UAAUgB,QAAQ,IAGpE4D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACV,KAAOJ,EAAM3E,SAAW2E,EAAM9E,OAAS,EAAI8E,EAAMxE,WAAWa,QAAQ,IAIzE4D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CACVE,QAAS,WACLN,EAAMhB,WAAWgB,EAAMjB,SAFnC,UCjBAiC,EA7CA,SAAChB,GAEb,OAAOC,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAAA,MAAKC,UAAU,gDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACT,SAGNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACVJ,EAAMiB,YAGXhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,IAAMJ,EAAMkB,mBAElBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,KAAOJ,EAAMmB,kBAGnBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,IAAMJ,EAAMoB,YAGlBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBC0EZV,cA9CS,WAEpB,OAAO,MAIgB,SAACC,GAAD,MAAc,CAGrCC,cAAe,SAACC,EAAiBzB,GAC7BuB,EAAS,CACLvE,KHrEkB,cGsElBqD,QAAQ,CACJV,YAAc8B,EACdzB,OAASA,MAMrB0B,YAAa,SAACD,EAAiBE,GAC3BJ,EAAS,CACLvE,KHjFqB,cGkFrBqD,QAAQ,CACJV,YAAc8B,EACdnB,SAAWqB,MAMvBf,WAAY,SAACa,GACTF,EAAS,CACLvE,KHzFwB,uBG0FxBqD,QAAQ,CACJQ,UAAYY,QAWbH,CAtGa,WACxB,OAAMO,EAAAC,EAAAC,cAAA,MAAKC,UAAU,mBACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SACM,UAKVF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,SACM,SAKVF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SACK,UAGTF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,SACK,aAGTF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,SACK,cAGTF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,SACK,aAITF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,SACM,cAIVF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SACM,eCRLkB,EAvCK,SAACrB,GACnB,OAAMC,EAAAC,EAAAC,cAAA,MAAKC,UAAU,gDACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACT,kBAGNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,OAGNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV,OAELH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACV,SAGLH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,OAENH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,KAAOjE,OAAOC,WAAW4D,EAAMsB,oBAAoBjF,QAAQ,IAGjE4D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,IAGNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,SCiBImB,EA9CQ,SAACvB,GACrB,OAAOC,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,MAAKC,UAAU,gDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACT,gBAGNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,OAGNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV,OAELH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACV,OAGLH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,OAENH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACT,KAAOJ,EAAMwB,gBAGnBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,aAAM,IAAMH,EAAMyB,0BAGtBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACT,WC8BPV,cANS,SAAAlF,GAAK,OAAIA,EAAM2D,kBAGZ,SAACwB,GAAD,MAAe,IAG3BD,CApDK,SAACM,GAEjB,IAAM0B,EAAwBnF,EAAuByD,EAAM7C,eACrD+D,EAAoB5E,EAAgB0D,EAAM7C,eAI1CwE,EAAgB9E,EAAgBmD,EAAM7C,eAEtCqE,EAAiBpF,WAAWsF,GAAyBtF,WAAWuF,GAEhEC,EAAkCxF,WAAWJ,EAA0BgE,EAAM7C,gBAE7EsE,EAA0BP,EAAoBM,EAEpD,OAAOvB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEjBH,EAAAC,EAAAC,cAAC0B,EAAD,MACC7B,EAAM7C,cAAcxB,IAAI,SAACmG,EAAM/C,GAAP,OAAiBkB,EAAAC,EAAAC,cAAC4B,EAAD,CAAShD,MAAOA,EACP1D,SAAUyG,EAAKzG,SACfD,KAAM0G,EAAK1G,KACXF,MAAO4G,EAAK5G,MACZD,MAAO6G,EAAK7G,MACZO,SAAUsG,EAAKtG,SACfL,SAAU2G,EAAK3G,aAElE8E,EAAAC,EAAAC,cAAC6B,EAAD,CACId,kBAAmBA,EACnBE,WAAYQ,EACZX,WAAYxF,EAAcuE,EAAM7C,eAChCgE,iBAAkBO,IAGtBzB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACVF,EAAAC,EAAAC,cAAC8B,EAAD,CAAiBX,mBAAoBzE,EAAgBmD,EAAM7C,iBAC3D8C,EAAAC,EAAAC,cAAC+B,EAAD,CACIN,gCAAiCA,EACjCJ,eAAgBA,EAChBC,wBAAyBA,cCV/BU,EAAW,WACb,OAAOlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAClBH,EAAAC,EAAAC,cAAA,4DAmBQT,cAfQ,SAAClF,GACrB,OAAOA,EAAM2D,kBAGQ,SAACwB,GAAD,MAAa,CAClCyC,UAAW,WACPzC,EAAS,CACLvE,KP/CgB,kBOuDZsE,CApDI,SAACM,GAEjB,IAAMqC,EAAoB5G,EAAcuE,EAAM7C,eAE9C,OAAmC,IAA/B6C,EAAM7C,cAAcH,OACbiD,EAAAC,EAAAC,cAACmC,EAAD,MACJrC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCAAb,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCAEZH,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,GClBG,eDmBLvC,EAAAC,EAAAC,cAAA,UACIE,SAAUgC,EAAmB,EAC7BjC,UAAU,uCACVhF,KAAK,SACLkF,QAAS,WAAKN,EAAMoC,cAJxB,YAQJnC,EAAAC,EAAAC,cAAA,UACIC,UAAU,sCACVE,QAAS,WAAKN,EAAMoC,cAFxB,WAOPnC,EAAAC,EAAAC,cAACsC,EAAD,SEeE/C,cAnBQ,aAEE,SAACC,GAAD,MAAa,CAElC+C,cAAe,SAAC9G,GACZ+D,EAAS,CACLvE,KTjCoB,mBSkCpBqD,QAAQ,CACJ7C,KAAOA,QAWR8D,CA9CE,SAACM,GAClB,OAAQC,EAAAC,EAAAC,cAAA,OAAKwC,MAAM,QAAQnC,MAAO,CAACoC,SAAU,KACrC3C,EAAAC,EAAAC,cAAA,OAAKwC,MAAM,eACNE,IAAK7C,EAAMpE,KAAKL,YAChBuH,IAAI,iBACJtC,MAAO,CAACuC,UAAY,OACrB9C,EAAAC,EAAAC,cAAA,OAAKwC,MAAM,aACP1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,IAA2B,IAAMJ,EAAMpE,KAAKV,QAEhD+E,EAAAC,EAAAC,cAAA,MAAIwC,MAAM,cAAc3C,EAAMpE,KAAKX,OAEnCgF,EAAAC,EAAAC,cAAA,KAAGwC,MAAM,aAAY1C,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcJ,EAAMpE,KAAKR,OAG/D6E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BACVE,QAAS,WAAKN,EAAM0C,cAAc1C,EAAMpE,QADhD,aCeD8D,cAfS,SAAAlF,GAGpB,OAAOA,EAAMwI,kBAIU,SAACrD,GAAD,MAAc,IAQ1BD,CA9BC,SAACM,GAIjB,OAHAtF,QAAQC,IAAIgC,KACZjC,QAAQC,IAAIiC,KAELqD,EAAAC,EAAAC,cAAA,OAAKwC,MAAM,aAEV3C,EAAM7C,cAAcxB,IAAI,SAACC,EAAMmD,GAC3B,OAAOkB,EAAAC,EAAAC,cAAC8C,EAAD,CAAUrH,KAAQA,SC2B1B8D,cAFS,SAAAlF,GAAK,OAAIA,EAAM2D,kBACZ,SAACwB,GAAD,MAAc,IAC1BD,CAhCa,SAACM,GAEzB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAElBH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,uBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,gBdsBS,SAACzE,GAC1B,IAAMwF,EAAoB5E,EAAgBZ,GAEpCgG,EAAwBnF,EAAuBb,GAI/CiG,EAAgB9E,EAAgBnB,GAKtC,OAAOwF,GAHgB9E,WAAWsF,GAAyBtF,WAAWuF,Ic/B9CuB,CAAclD,EAAM7C,gBAC5B8C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAkC3E,EAAcuE,EAAM7C,gBAEtE8C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,GHpBG,gBGqBDvC,EAAAC,EAAAC,cAAA,UACIC,UAAU,uCACVhF,KAAK,UAFT,oBAUpB6E,EAAAC,EAAAC,cAACgD,EAAD,SCfQC,EAdY,WACxB,OAAMnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2EACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCAEXH,EAAAC,EAAAC,cAAA,yDCmBCkD,EAvBF,WACX,OAAOpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAClBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAekD,KAAK,KAAjC,eACArD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBhF,KAAK,SAASmI,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC1K1D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BpF,GAAG,sBACzCiF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,GLTO,kBKUTvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2BkD,KAAK,KAA7C,QAAsDrD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,eAG1DH,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,GLZA,WKaFvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBkD,KAAK,KAAtC,WAEJrD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBkD,KAAK,KAAtC,YAEArD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAA6BkD,KAAK,KAA/C,eCDAM,EAfF,SAAC5D,GAEZ,OAASC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEjBtF,EAAYa,IAAI,SAACkI,EAAgB9E,GAC/B,OAAOkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACjByD,OCuBAC,EAxBC,SAAC9D,GACf,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQC,SAAUhE,EAAMgE,UACpB/D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8D,EAAD,MAEAhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KAEIjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAqBC,UAAWC,IAClDtE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,OAAK,EAACC,KPhBf,UOgBwCC,UAAWV,IACjD3D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,OAAK,EAACC,KPlBR,iBOkBkCC,UAAWC,IAClDtE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQC,OAAK,EAACC,KPrBT,eOqBkCC,UAAWE,IAElDvE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQC,OAAK,EAAEC,KPtBV,cOsBkCC,UAAWlB,eCnB1E1I,QAAQC,IAAII,GAEZ,IAAMmC,GAAe,CACjBC,cAAepC,GAaJiI,GARU,WAAkC,IAAjCxI,EAAiC6D,UAAArB,OAAA,QAAAsB,IAAAD,UAAA,GAAAA,UAAA,GAAzBnB,GAAyBmB,UAAArB,OAAA,GAAAqB,UAAA,GAKvD,OAAOJ,OAAAO,EAAA,EAAAP,CAAA,GAAIzD,ICETiK,GAAmBC,YAAgB,CAACvG,mBAAiB6E,sBACrD2B,GAAaC,YAAkBC,cAAWC,IAAOC,KACjDC,GAAQC,YAAYR,GAAiBE,IAE3CjK,QAAQC,IAAIuK,oBAEZC,IAASC,OACLnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAUL,MAAQA,IACd/E,EAAAC,EAAAC,cAACmF,EAAD,CAAWtB,SAAUkB,sBAIvBK,SAASC,eAAe,StBXf,WACX,GAA6C,kBAAmBzL,UAAW,CAGvE,GADkB,IAAI0L,IAAIP,mBAAwBzL,OAAOC,UAC3CgM,SAAWjM,OAAOC,SAASgM,OAIrC,OAGJjM,OAAOkM,iBAAiB,OAAQ,WAC5B,IAAM7L,EAAK,GAAA8L,OAAMV,mBAAN,sBAEP3L,GAiDhB,SAAiCO,GAE7B+L,MAAM/L,GACDI,KAAK,SAAA4L,GAGsB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CnM,UAAUC,cAAcmM,MAAMjM,KAAK,SAAAC,GAC/BA,EAAaiM,aAAalM,KAAK,WAC3BT,OAAOC,SAAS2M,aAKxBxM,EAAgBC,KAGvBc,MAAM,WACHF,QAAQC,IACJ,mEArEA2L,CAAwBxM,GAIxBC,UAAUC,cAAcmM,MAAMjM,KAAK,WAC/BQ,QAAQC,IACJ,+GAMRd,EAAgBC,MsBZhCyM","file":"static/js/main.52b93999.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","\nexport const TYPE_BLU_RAY = \"BLU-RAY\"\nexport const TYPE_DVD = \"DVD\"\n\nexport const FIXED_COUNT = 0\nexport const ALL_DVD_DISCOUNT = 0.10\nexport const ALL_BLU_RAY_DISCOUNT = 0.15\nexport const BULK_DISCOUNT_MIN_COUNT = 100\nexport const BULK_DISCOUNT = .05\n\nexport const offersArray = [\n    \"Purchase all the different DVDs, \" +\n    \"and get 10% discount on those items\",\n\n    \"Purchase all the different BLU-RAY, \" +\n    \"and get 15% discount on those items\",\n\n    \"Get a 5% bulk discount  on the total in addition to previous discounts \" +\n    \"for purchase of  100 items or more \"\n]\n\n\n\n\nexport const StockedItemList = [\n    {\n        id: 0,\n        title: \"Star Wars Episode IV\",\n        price: 20,\n        currency: \"USD\",\n        type: TYPE_DVD,\n        quantity: 0,\n        details: \"Luke Skywalker joins forces with a Jedi Knight, a cocky pilot, \" +\n        \"a Wookiee and two droids to save the galaxy.\",\n        coverImgUrl: 'https://images-na.ssl-images-amazon.com/images/I/81ae8A9aEYL._SL1500_.jpg',\n        discount: 0.00\n\n    },\n    {\n        id: 1,\n        title: \"Star Wars Episode IV\",\n        price: 25,\n        currency: \"USD\",\n        type: TYPE_BLU_RAY,\n        quantity: 0,\n        details: \"Luke Skywalker joins forces with a Jedi Knight, a cocky pilot, \" +\n        \"a Wookiee and two droids to save the galaxy.\",\n        coverImgUrl: 'https://images-na.ssl-images-amazon.com/images/I/81ae8A9aEYL._SL1500_.jpg',\n        discount: 0,\n\n\n    },\n    {\n        id: 2,\n        title: \"Star Wars Episode V\",\n        price: 20,\n        currency: \"USD\",\n        type: TYPE_DVD,\n        quantity: 0,\n        details: \"After the rebels are brutally overpowered \" +\n        \"by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda\",\n        coverImgUrl: 'https://images-na.ssl-images-amazon.com/images/I/81pL7ZGEa5L._SX355_.jpg',\n        discount: 0,\n\n    },\n    {\n        id: 3,\n        title: \"Star Wars Episode V\",\n        price: 25,\n        currency: \"USD\",\n        type: TYPE_BLU_RAY,\n        quantity: 0,\n        details: \"After the rebels are brutally overpowered \" +\n        \"by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda\",\n        coverImgUrl: 'https://images-na.ssl-images-amazon.com/images/I/81pL7ZGEa5L._SX355_.jpg',\n        discount: 0\n\n\n    },\n    {\n        id: 4,\n        title: \"Star Wars Episode VI\",\n        price: 20,\n        currency: \"USD\",\n        type: TYPE_DVD,\n        quantity: 0,\n        details: \"After a daring mission to rescue Han Solo from Jabba the Hutt,\" +\n        \" the rebels dispatch to Endor to destroy a more powerful Death Star.\",\n        coverImgUrl: 'https://d27t0qkxhe4r68.cloudfront.net/t_900/A10301A0000911867A.jpg?1435761144',\n        discount: 0\n    },\n    {\n        id: 5,\n        title: \"Star Wars Episode VI\",\n        price: 25,\n        currency: \"USD\",\n        type: TYPE_BLU_RAY,\n        quantity: 0,\n        details: \"After a daring mission to rescue Han Solo from Jabba the Hutt, \" +\n        \"the rebels dispatch to Endor to destroy a more powerful Death Star.\",\n        coverImgUrl: 'https://d27t0qkxhe4r68.cloudfront.net/t_900/A10301A0000911867A.jpg?1435761144',\n        discount: 0\n\n    },\n\n]\n","import {FIXED_COUNT} from \"./config/ConfigConstants\";\nimport {getBulkDiscount} from \"./Inventory\";\n\nexport const getTotalItems = (itemsArray) => {\n    const qtyArray = itemsArray.map(item => item.quantity)\n    return qtyArray.reduce(((acc, curr) => acc + curr), 0)\n\n}\n\nexport const getDiscountedItemPrice = (item) => {\n    return Number.parseFloat((item.quantity * (item.price * (1 - item.discount))).toFixed(FIXED_COUNT))\n\n}\n\nexport const getDiscountItemAllQuantity = (item) => {\n    return Number.parseFloat((item.quantity * (item.price * item.discount)).toFixed(FIXED_COUNT))\n\n\n}\n\nexport const getDiscountedItemListCost = (itemsArray) => {\n    const temp = itemsArray.reduce(((acc, currentItem) => acc + getDiscountedItemPrice(currentItem)), 0)\n    return Number.parseFloat(temp).toFixed(FIXED_COUNT)\n\n}\n\nexport const getItemListCost = (itemsArray) => {\n    const temp = itemsArray.reduce(((acc, currentItem) => acc + (currentItem.price * currentItem.quantity)), 0)\n    return Number.parseFloat(temp).toFixed(FIXED_COUNT)\n\n}\n\n\nexport const getDiscountForItemList = (itemsArray) => {\n    const temp = itemsArray.reduce(((acc, currentItem) => acc + getDiscountItemAllQuantity(currentItem)), 0)\n    return Number.parseFloat(temp).toFixed(FIXED_COUNT)\n}\n\nexport const getFinalPrice = (itemsArray) => {\n    const itemListTotalCost = getItemListCost(itemsArray)\n\n    const itemListTotalDiscount = getDiscountForItemList(itemsArray)\n\n    //totalDiscounts - includes itemListDiscount and Bulk discount\n\n    const bulkDiscounts = getBulkDiscount(itemsArray)\n\n    const totalDiscounts = parseFloat(itemListTotalDiscount) + parseFloat(bulkDiscounts)\n\n\n    return itemListTotalCost - totalDiscounts\n}\n\n// adapted from\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-a-array-of-objects\nexport const groupBy = (arr, key) => {\n    return arr.reduce(function (rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n    }, {});\n};\n\n\n\n","import {getDiscountedItemListCost, getTotalItems} from \"./utilFunctions\";\nimport {BULK_DISCOUNT, BULK_DISCOUNT_MIN_COUNT, StockedItemList, TYPE_BLU_RAY, TYPE_DVD} from \"./config/ConfigConstants\";\n\n\nexport const getDiscListByType = (itemList,type) => {\n    return StockedItemList.filter(item => item.type === type)\n\n}\n\n\nexport const getAllBLU_RAY = () => {\n    return getDiscListByType(TYPE_BLU_RAY)\n}\nexport const getAllDVD = () => {\n    return getDiscListByType(TYPE_DVD)\n}\n\n\n\nexport const getBulkDiscount = (itemList) => {\n\n    const totalCost = getDiscountedItemListCost(itemList)\n    const itemCount = getTotalItems(itemList)\n\n    if (itemCount >= BULK_DISCOUNT_MIN_COUNT) {\n        return totalCost * (BULK_DISCOUNT)\n    }\n    return 0\n\n}\n\nexport const maxUniqueBLURayCount = getAllBLU_RAY().length\nexport const maxUniqueDVDCount = getAllDVD().length\n","import {ADD_ITEM_TO_CART, DELETE_ITEM_BY_INDEX, INC_DEC_QTY, REPLACE_QTY, RESET_CART} from \"../constants/ItemsList\";\nimport {\n    maxUniqueBLURayCount, maxUniqueDVDCount\n} from \"../../Inventory\";\nimport {ALL_BLU_RAY_DISCOUNT, ALL_DVD_DISCOUNT, TYPE_BLU_RAY, TYPE_DVD} from \"../../config/ConfigConstants\";\n\n\nconst initialState = {\n    ItemListArray: [],\n    fetching: false,\n    error: false\n};\n\n\nconst updateDiscountOnQtyChange = (itemList) => {\n\n    const currentDVDList = itemList.filter(item => item.type === TYPE_DVD  && item.quantity > 0 )\n    const currentBLURAYList = itemList.filter(item => item.type === TYPE_BLU_RAY && item.quantity > 0)\n\n\n    console.log(\"currentDVDList : \", currentDVDList)\n    console.log(\"currentBluList : \", currentBLURAYList)\n\n\n    const currentDVDIdSet = new Set(currentDVDList.map(item => item.id   ))\n    const currentBluRayIdSet = new Set(currentBLURAYList.map(item => item.id ))\n\n    console.log(\"currentDVDIdSet : \")\n    console.log(currentDVDIdSet)\n\n    console.log(\"currentBLuIdSet : \")\n    console.log(currentBluRayIdSet)\n\n\n    const countCurrentDVDIdSet      = currentDVDIdSet.size\n    const countCurrentBluRayIdSet   = currentBluRayIdSet.size\n\n\n    console.log(\"countCurrentDVDIdSet : \")\n    console.log(countCurrentDVDIdSet)\n\n    console.log(\"countCurrentBluRayIdSet : \")\n    console.log(countCurrentBluRayIdSet)\n\n    itemList = itemList.map(item => {\n        if (item.type === TYPE_BLU_RAY) {\n\n            if (countCurrentBluRayIdSet === maxUniqueBLURayCount) {\n\n                item.discount = ALL_BLU_RAY_DISCOUNT\n            }\n            else {\n                //setDiscount to 0\n\n                item.discount = 0\n            }\n\n\n        }\n        if (item.type === TYPE_DVD) {\n            if (countCurrentDVDIdSet === maxUniqueDVDCount) {\n                console.log(\"updating discount for dvd\")\n\n                item.discount = ALL_DVD_DISCOUNT\n            }\n            else {\n                //setDiscount to 0\n                item.discount = 0\n            }\n\n        }\n        return item\n    })\n\n    return itemList\n}\nconst incDecQty = (itemList, array_index, changeInQty) => {\n    itemList[array_index].quantity += changeInQty\n    updateDiscountOnQtyChange(itemList)\n    return [...itemList]\n}\nconst updateItemQty = (itemList, array_index, newQty) => {\n    itemList[array_index].quantity = parseInt(newQty)\n    itemList = updateDiscountOnQtyChange(itemList)\n    return [...itemList]\n}\n\nconst deleteItem = (itemList, indexToDelete) => {\n\n    let deletedList =  itemList.filter((item, index) => index !== indexToDelete)\n    return updateDiscountOnQtyChange(deletedList)\n}\nconst ItemsListReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case INC_DEC_QTY :\n            return {\n                ...state,\n                ItemListArray: incDecQty(state.ItemListArray, action.payload.array_index,\n                    action.payload.incOrDec)\n            }\n\n        case REPLACE_QTY:\n            return {\n                ...state, error: false,\n                ItemListArray: updateItemQty(state.ItemListArray,\n                    action.payload.array_index, action.payload.newQty)\n            }\n\n\n        case DELETE_ITEM_BY_INDEX : {\n            const newItemListArray = [... deleteItem(state.ItemListArray, action.payload.itemIndex)]\n            return {...state, ItemListArray: newItemListArray}\n        }\n\n\n        case ADD_ITEM_TO_CART: {\n            const ind = getIndexOfItem(state.ItemListArray, action.payload.item)\n            if (ind > -1) {\n\n                const updatedArray = incDecQty(state.ItemListArray, ind, 1)\n\n                return {...state, ItemListArray: updatedArray}\n            }\n\n            else {\n\n                let newItem = action.payload.item\n                newItem.quantity = 1\n                let currentList = state.ItemListArray\n                currentList.push(action.payload.item)\n                currentList = updateDiscountOnQtyChange(currentList)\n\n                return {...state, ItemListArray: [...currentList]}\n            }\n\n        }\n\n\n        case RESET_CART:\n            return {...state, ItemListArray : []}\n\n        default :\n            return {...initialState}\n\n\n    }\n}\n\nexport default ItemsListReducer\n\nexport const getIndexOfItem = (arr, newItem) => {\n    return arr.findIndex(currentItem => newItem.id === currentItem.id)\n\n}\n","export  const INC_DEC_QTY      = \"INC_DEC_QTY\"\nexport  const  REPLACE_QTY  = \"REPLACE_QTY\"\n\nexport const DELETE_ITEM_BY_INDEX = \"DELETE_ITEM_BY_INDEX\"\nexport const ADD_ITEM_TO_CART = \"ADD_ITEM_TO_CART\"\nexport const  RESET_CART  = \"RESET_CART\"\n","import React from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {DELETE_ITEM_BY_INDEX, INC_DEC_QTY, REPLACE_QTY} from \"../redux/constants/ItemsList\";\n\nconst ItemBar = (props) => {\n    console.log(props)\n    return < li className=\"list-group-item\">\n        <div className=\"row\">\n            <div className=\"col-lg-3 pull-left\">\n                {props.title}\n            </div>\n\n            <div className=\" col-lg-1 float-left badge-pill\">\n                {props.type}\n            </div>\n\n            <div className=\"col-lg-2\">\n                {\"$\" + props.price}\n            </div>\n            <div className=\"col-lg-2  float-right\">\n                <button className=\"font-weight-bold btn btn-outline-danger rounded \"\n                        disabled={props.quantity <= 0}\n                        onClick={() => {\n                            props.incOrDecQty(props.index, -1)\n                        }}>-\n                </button>\n                <input className=\"input-group-sm\"\n\n                       value={props.quantity}\n                       style={{width: 50, justifyContent: 'center'}}\n                       onChange={(e) => {\n                           const val = parseInt(e.target.value)\n                           if (isNaN(val)) {\n                               props.updateItemQty(props.index, 0)\n                           }\n\n\n                           else {\n                               props.updateItemQty(props.index, val)\n                           }\n\n                       }}\n                />\n\n\n                <button className=\"btn btn-outline-success rounded\"\n                        onClick={() => {\n                            props.incOrDecQty(props.index, 1)\n                        }}>+\n                </button>\n            </div>\n            <div className=\" col-lg-1 float-left badge-pill\">\n                {\"$\" + props.price * props.quantity}\n            </div>\n            <div className=\" col-lg-1 float-left badge-pill\">\n                {\"-$\" + (props.discount * props.price * props.quantity).toFixed(2)}\n            </div>\n\n            <div className=\" col-lg-1 float-left badge-pill\">\n                {\"$\" + (props.quantity * props.price * (1 - props.discount)).toFixed(2)}\n            </div>\n\n\n            <div className=\"col-lg-1\">\n                <button className=\"font-weight-bold btn btn-danger rounded \"\n                        onClick={() => {\n                            props.deleteItem(props.index)\n                        }}>X\n                </button>\n            </div>\n\n        </div>\n\n    </li>\n}\n\n\nconst mapStateToProps = () => {\n\n    return null\n};\n\n\nconst mapDispatchToProps = (dispatch) => ({\n\n\n    updateItemQty: (itemIndexInArray, newQty) => {\n        dispatch({\n            type: REPLACE_QTY,\n            payload: {\n                array_index: itemIndexInArray,\n                newQty: newQty\n            }\n        })\n    },\n\n\n    incOrDecQty: (itemIndexInArray, qtyToChange) => {\n        dispatch({\n            type: INC_DEC_QTY,\n            payload: {\n                array_index: itemIndexInArray,\n                incOrDec: qtyToChange\n            }\n        })\n    },\n\n\n    deleteItem: (itemIndexInArray) => {\n        dispatch({\n            type: DELETE_ITEM_BY_INDEX,\n            payload: {\n                itemIndex: itemIndexInArray,\n            }\n        })\n    }\n\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemBar);\n\n","import React from \"react\";\n\nconst TotalBar =(props)=>{\n\n    return <div>\n    < li className=\"list-group-item border-secondary border-dark\">\n        <div className = \"row\">\n            <div className=\"col-lg-3 pull-left\">\n                { \"Total\"}\n            </div>\n\n            <div className=\" col-lg-1 float-left badge-pill\">\n            </div>\n\n            <div className=\"col-lg-2\">\n            </div>\n            <div className=\"col-lg-2  float-right\">\n                {props.itemsCount}\n\n            </div>\n            <div className=\" col-lg-1 float-left badge-pill\">\n                { \"$\" + props.itemListTotalCost}\n            </div>\n            <div className=\" col-lg-1 float-left badge-pill\">\n                { \"-$\" + props.itemListDiscount}\n            </div>\n\n            <div className=\" col-lg-1 float-left badge-pill\">\n                { \"$\" + props.totalPrice }\n            </div>\n\n            <div className=\"col-lg-1\">\n\n            </div>\n\n        </div>\n\n    </li>\n\n\n\n    </div>\n\n}\n\n\n\nexport default  TotalBar\n","import React from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {DELETE_ITEM_BY_INDEX, INC_DEC_QTY, REPLACE_QTY} from \"../redux/constants/ItemsList\";\nconst ItemsListCaptionBar = ()=>{\n    return< li className=\"list-group-item\">\n        <div className = \"row\">\n            <div className=\"col-lg-3 pull-left\">\n                <b>\n                    { \"Title\"}\n\n                </b>\n            </div>\n\n            <div className=\" col-lg-1 float-left badge-pill\">\n                <b>\n                    { \"Type\"}\n\n                </b>\n            </div>\n\n            <div className=\"col-lg-2\">\n                <b>\n                    {\"Price\"}\n                </b>\n            </div>\n            <div className=\"col-lg-2  float-right\">\n                <b>\n                    {\"Quantity\"}\n                </b>\n            </div>\n            <div className=\" col-lg-1 float-left badge-pill\">\n                <b>\n                    {\"ItemPrice\"}\n                </b>\n            </div>\n            <div className=\" col-lg-1 float-left badge-pill\">\n                <b>\n                    {\"Discount\"}\n                </b>\n            </div>\n\n            <div className=\" col-lg-1 float-left badge-pill\">\n                <b>\n                    { \"Net Price\" }\n                </b>\n            </div>\n\n            <div className=\"col-lg-1\">\n                <b>\n                    { \"Remove\" }\n                </b>\n            </div>\n\n        </div>\n\n    </li>\n}\n\n\nconst mapStateToProps = () => {\n\n    return null\n};\n\n\nconst mapDispatchToProps = (dispatch) =>({\n\n\n    updateItemQty: (itemIndexInArray,newQty)=>{\n        dispatch({\n            type : REPLACE_QTY,\n            payload:{\n                array_index : itemIndexInArray,\n                newQty : newQty\n            }\n        })\n    },\n\n\n    incOrDecQty: (itemIndexInArray,qtyToChange)=>{\n        dispatch({\n            type : INC_DEC_QTY,\n            payload:{\n                array_index : itemIndexInArray,\n                incOrDec : qtyToChange\n            }\n        })\n    },\n\n\n    deleteItem: (itemIndexInArray)=>{\n        dispatch({\n            type : DELETE_ITEM_BY_INDEX,\n            payload:{\n                itemIndex : itemIndexInArray,\n            }\n        })\n    }\n\n\n})\n\n\n\n\nexport default connect( mapStateToProps, mapDispatchToProps)(ItemsListCaptionBar);\n\n","import React from \"react\";\n\nconst BulkDiscountBar=(props)=>{\n    return< li className=\"list-group-item border-secondary border-dark\">\n        <div className = \"row\">\n            <div className=\"col-lg-3 pull-left\">\n                { \"Bulk Discount \"}\n            </div>\n\n            <div className=\" col-lg-1 float-left badge-pill\">\n                { \"---\"}\n            </div>\n\n            <div className=\"col-lg-2\">\n                {\"---\"}\n            </div>\n            <div className=\"col-lg-2  float-right\">\n                {\"-----\"}\n\n            </div>\n            <div className=\" col-lg-1 float-left badge-pill\">\n                { \"---\"}\n            </div>\n            <div className=\" col-lg-1 float-left badge-pill\">\n                { \"-$\" + Number.parseFloat(props.bulkDiscountAmount).toFixed(2)}\n            </div>\n\n            <div className=\" col-lg-1 float-left badge-pill\">\n                { \"\" }\n            </div>\n\n            <div className=\"col-lg-1\">\n                --\n            </div>\n\n        </div>\n\n    </li>\n\n}\n\nexport  default  BulkDiscountBar\n","import React from \"react\";\n\nconst AfterBulkDiscount=(props)=>{\n    return <div>\n        < li className=\"list-group-item border-secondary border-dark\">\n            <div className = \"row\">\n                <div className=\"col-lg-3 pull-left\">\n                    { \"Final Amount\"}\n                </div>\n\n                <div className=\" col-lg-1 float-left badge-pill\">\n                    { \"---\"}\n                </div>\n\n                <div className=\"col-lg-2\">\n                    {\"---\"}\n                </div>\n                <div className=\"col-lg-2  float-right\">\n                    {\"---\"}\n\n                </div>\n                <div className=\" col-lg-1 float-left badge-pill\">\n                    { \"---\"}\n                </div>\n                <div className=\" col-lg-1 float-left badge-pill\">\n                    { \"-$\" + props.totalDiscounts}\n                </div>\n\n                <div className=\" col-lg-1 float-left badge-pill\">\n                    <b> { \"$\" + props.amountAfterBulkDiscount }</b>\n                </div>\n\n                <div className=\"col-lg-1\">\n                    { \"---\"}\n\n                </div>\n\n            </div>\n\n        </li>\n\n\n\n    </div>\n\n}\n\n\nexport default  AfterBulkDiscount\n","import React from 'react'\nimport ItemBar from \"./ItemBar\";\nimport connect from \"react-redux/es/connect/connect\";\nimport TotalBar from \"./TotalBar\";\nimport ItemsListCaptionBar from \"./ItemsListCaptionBar\";\nimport {getDiscountForItemList, getDiscountedItemListCost, getTotalItems, getItemListCost} from \"../utilFunctions\";\nimport BulkDiscountBar from \"./BulkDiscountBar\";\nimport {getBulkDiscount} from \"../Inventory\";\nimport AfterBulkDiscount from \"./AfterBulkDiscount\";\n\n\nconst ItemBarList = (props) => {\n\n    const itemListTotalDiscount = getDiscountForItemList(props.ItemListArray)\n    const itemListTotalCost = getItemListCost(props.ItemListArray)\n\n    //totalDiscounts - includes itemListDiscount and Bulk discount\n\n    const bulkDiscounts = getBulkDiscount(props.ItemListArray)\n\n    const totalDiscounts = parseFloat(itemListTotalDiscount) + parseFloat(bulkDiscounts)\n\n    const totalPriceAfterItemListDiscount = parseFloat(getDiscountedItemListCost(props.ItemListArray))\n\n    const amountAfterBulkDiscount = itemListTotalCost - totalDiscounts\n\n    return <ul className=\"list-group\">\n\n        <ItemsListCaptionBar/>\n        {props.ItemListArray.map((Item, index) => <ItemBar index={index}\n                                                           quantity={Item.quantity}\n                                                           type={Item.type}\n                                                           price={Item.price}\n                                                           title={Item.title}\n                                                           discount={Item.discount}\n                                                           currency={Item.currency}/>)}\n\n        <TotalBar\n            itemListTotalCost={itemListTotalCost}\n            totalPrice={totalPriceAfterItemListDiscount}\n            itemsCount={getTotalItems(props.ItemListArray)}\n            itemListDiscount={itemListTotalDiscount}\n        ></TotalBar>\n\n        <br/><br/><br/>\n        <BulkDiscountBar bulkDiscountAmount={getBulkDiscount(props.ItemListArray)}/>\n        <AfterBulkDiscount\n            totalPriceAfterItemListDiscount={totalPriceAfterItemListDiscount}\n            totalDiscounts={totalDiscounts}\n            amountAfterBulkDiscount={amountAfterBulkDiscount}>\n        </AfterBulkDiscount>\n\n\n    </ul>\n}\n\n\nconst mapStateToProps = state => state.ItemsListReducer;\n\n\nconst mapDispatchToProps = (dispatch) => ({})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemBarList)\n\n","import React from 'react'\nimport ItemBarList from \"../../components/ItemBarList\";\nimport Link from \"react-router-dom/es/Link\";\nimport {PLACE_ORDER} from \"../../RouteConstants\";\nimport {RESET_CART} from \"../../redux/constants/ItemsList\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {getTotalItems} from \"../../utilFunctions\";\n\nconst ReviewScreen =(props)=>{\n\n    const countItemsInCart = (getTotalItems(props.ItemListArray))\n\n    if (props.ItemListArray.length === 0)\n        return <EmptyCart/>\n    return <div>\n            <nav className=\"navbar navbar-light bg-light justify-content-between\">\n                <a className=\"navbar-brand justify-content-start\">Review order</a>\n                <form className=\"form-inline justify-content-center\">\n\n                    <Link to={PLACE_ORDER}>\n                        <button\n                            disabled={countItemsInCart < 1}\n                            className=\"btn btn-outline-success my-2 my-sm-0\"\n                            type=\"submit\"\n                            onClick={()=>{props.resetCart()\n                            }}\n                        >Confirm</button>\n                    </Link>\n                    <button\n                        className=\"btn btn-outline-danger my-2 my-sm-0\"\n                        onClick={()=>{props.resetCart()}}\n                    >Clear</button>\n\n                </form>\n            </nav>\n             <ItemBarList></ItemBarList>\n    </div>\n}\n\nconst EmptyCart =()=>{\n    return <div className=\"jumbotron text-center\">\n        <h3> No items added! Your shopping cart is empty</h3>\n    </div>\n}\n\nconst mapStateToProps = (state)=>{\n    return state.ItemsListReducer\n\n}\nconst mapDispatchToProps=(dispatch)=>({\n    resetCart: ()=>{\n        dispatch({\n            type : RESET_CART,\n\n        })\n    },\n\n\n})\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(ReviewScreen)\n","export const REVIEW_SCREEN = '/reviewOrder'\nexport const PLACE_ORDER   = '/placeOrder'\nexport const ITEM_CATALOGUE ='/itemCatalogue'\nexport const OFFERS = '/offers'\n","import React from \"react\";\nimport {ADD_ITEM_TO_CART} from \"../redux/constants/ItemsList\";\nimport connect from \"react-redux/es/connect/connect\";\n\nconst ItemCard = (props)=>{\nreturn  <div class=\"card \" style={{minWidth: 40}}>\n        <img class=\"card-img-top\"\n             src={props.item.coverImgUrl}\n             alt=\"Card image cap\"\n             style={{maxHeight : 150}}/>\n            <div class=\"card-body\">\n                <div className=\"row px-1 float-right\">\n                    <text className=\"badge\"> { \"$\" + props.item.price }</text>\n                </div>\n                <h5 class=\"card-title\">{props.item.title}</h5>\n\n                <p class=\"card-text\"><label className=\"text-muted\">{props.item.type}</label></p>\n\n\n                <div className=\"container\">\n                    <button className=\"btn btn-block btn-warning\"\n                            onClick={()=>{props.addItemToCart(props.item)}}\n                    > Buy</button>\n                </div>\n\n\n            </div>\n    </div>\n}\n\n\nconst mapStateToProps =()=>{{}}\n\nconst mapDispatchToProps=(dispatch)=>({\n\n    addItemToCart: (item)=>{\n        dispatch({\n            type : ADD_ITEM_TO_CART,\n            payload:{\n                item : item\n\n            }\n        })\n    },\n\n\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemCard)\n","import React from \"react\";\nimport ItemCard from \"./ItemCard\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {getAllBLU_RAY, getAllDVD} from \"../Inventory\";\n\nconst ItemCardDeck =(props)=>{\n    console.log(getAllBLU_RAY())\n    console.log(getAllDVD())\n\n    return <div class=\"card-deck\">\n        {\n            props.ItemListArray.map((item, index )=>{\n                return <ItemCard item = {item}/>\n            })\n\n        }\n\n    </div>\n}\n\n    const mapStateToProps = state => {\n\n\n        return state.InventoryReducer\n    };\n\n\n    const mapDispatchToProps = (dispatch) =>({\n\n\n\n    })\n\n\n\n    export default connect(mapStateToProps, mapDispatchToProps)(ItemCardDeck)\n\n","import React from 'react'\nimport ItemCardDeck from \"../../components/ItemCardDeck\";\nimport {REVIEW_SCREEN} from \"../../RouteConstants\";\nimport Link from \"react-router-dom/es/Link\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {getFinalPrice, getTotalItems} from \"../../utilFunctions\";\n\nconst OrderCatalogueScreen =(props)=>\n{\n    return <div className=\"container-fluid\">\n\n        <div>\n            <nav className=\"navbar navbar-light bg-light justify-content-between\">\n                <a className=\"navbar-brand\">Movie DVD Catalogue</a>\n                <form className=\"form-inline\">\n                    <i className=\"px-2 fa fa-dollar\"/>\n                    <text> {getFinalPrice(props.ItemListArray)}</text>\n                    <i className=\" px-1 fa fa-cart-plus fa-2x\"></i>\n                    <text className=\"mx-1 badge-pill  badge rounded\">{getTotalItems(props.ItemListArray)}</text>\n\n                    <Link to={REVIEW_SCREEN}>\n                            <button\n                                className=\"btn btn-outline-success my-2 my-sm-0\"\n                                type=\"submit\">Review order</button>\n                        </Link>\n\n                </form>\n            </nav>\n\n        </div>\n\n        <ItemCardDeck/>\n    </div>\n\n}\n\n\nconst mapStateToProps = state => state.ItemsListReducer\nconst mapDispatchToProps = (dispatch) =>({})\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderCatalogueScreen)\n\n","import React from \"react\";\n\nexport const ConfirmOrder = ()=>{\n    return<div className=\"container-fluid  justify-content-center align-items-center  text-center\">\n        <div className=\"col\">\n            <div className=\"justify-content-center text-center\">\n\n                <b>Your order has been placed successfully!</b>\n            </div>\n\n\n        </div>\n    </div>\n}\n\n\nexport default  ConfirmOrder\n","import React from 'react'\nimport {ITEM_CATALOGUE, OFFERS} from \"../RouteConstants\";\nimport Link from \"react-router-dom/es/Link\";\nconst Navbar = ()=>{\n    return <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">Click Time </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n                <Link to={ITEM_CATALOGUE}>\n                    <a className=\"nav-item nav-link active\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                </Link>\n\n                <Link to={OFFERS}>\n                    <a className=\"nav-item nav-link\" href=\"#\">Offers</a>\n                </Link>\n                <a className=\"nav-item nav-link\" href=\"#\">Features</a>\n\n                <a className=\"nav-item nav-link disabled\" href=\"#\">Premium</a>\n            </div>\n        </div>\n    </nav>\n}\n\nexport  default  Navbar\n","import React from \"react\";\nimport {offersArray} from \"../../config/ConfigConstants\";\n\n\nconst Offers =(props)=>{\n\n   return  (<div className=\"container-fluid\">\n\n        { offersArray.map((discountDetail, index)=> {\n            return <div className=\"row jumbotron justify-content-start\">\n                {discountDetail}\n            </div>\n        })}\n    </div>)\n\n}\n\n\n\nexport default  Offers\n","import {Route, HashRouter as Router, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport ReviewScreen from \"./Screens/ReviewScreen\";\nimport {ITEM_CATALOGUE, OFFERS, PLACE_ORDER, REVIEW_SCREEN} from \"../RouteConstants\";\nimport OrderCatalogueScreen from \"./Screens/OrderCatalogueScreen\";\nimport ConfirmOrder from \"./Screens/ConfirmOrder\";\nimport Navbar from \"../components/Navbar\";\nimport Offers from \"./Screens/Offers\";\n\nconst  RoutedApp =(props)=> {\n    return(\n        <div>\n            <Router basename={props.basename}>\n                <div>\n                    <Navbar/>\n\n                    <Switch>\n\n                        <Route exact path=\"/\"                  component={OrderCatalogueScreen}/>\n                        <Route exact path={OFFERS}            component={Offers}/>\n                        <Route exact path={ITEM_CATALOGUE}     component={OrderCatalogueScreen}/>\n                        <Route  exact path={REVIEW_SCREEN}     component={ReviewScreen} />\n\n                        <Route  exact  path={PLACE_ORDER}      component={ConfirmOrder}/>\n\n\n                    </Switch>\n                </div>\n\n            </Router>\n        </div>)\n}\n\nexport  default  RoutedApp\n","//loading from the assumed data set\n\nimport {StockedItemList} from \"../../config/ConfigConstants\";\n\nconsole.log(StockedItemList)\n\nconst initialState = {\n    ItemListArray: StockedItemList\n\n};\n\n\nconst InventoryReducer = (state = initialState, action) => {\n\n   //this part should be replaced with the api service and dependent cases,\n   //  hence no action.type based returns\n\n    return {...state}\n}\n\nexport default InventoryReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\"\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport promise from 'redux-promise-middleware'\nimport ItemsListReducer from \"./redux/reducers/ItemsListReducer\";\nimport RoutedApp from \"./containers/RoutedApp\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport InventoryReducer from \"./redux/reducers/InventoryReducer\";\n\n\nconst combinedReducers = combineReducers({ItemsListReducer,InventoryReducer});\nconst middleware = applyMiddleware(  promise(), thunk ,logger);\nconst store = createStore(combinedReducers,middleware);\n\nconsole.log(process.env.PUBLIC_URL)\n\nReactDOM.render(\n    <Provider store ={store}>\n        <RoutedApp basename={process.env.PUBLIC_URL}/>\n    </Provider>\n\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}